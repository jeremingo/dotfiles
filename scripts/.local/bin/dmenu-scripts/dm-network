#!/bin/sh

network_prompt () {
  startnm=''
  prompt=''
  stopnm=''
  connect=''
  disconnect=''
  togglewifi=''
  togglevalue=''

  if ! systemctl is-active --quiet NetworkManager; then
    startnm='start network manager'
    prompt='network manager is inactive'
  else
    stopnm='stop network manager'

    if nmcli radio wifi | grep -q enabled; then
      connect='connect to wifi network'
      connected_network=$( nmcli --terse -f NAME connection show --active | grep -vx lo )

      if [[ ! -z "$connected_network" ]]; then
        disconnect="disconnect from $connected_network"
        prompt="connected to $connected_network"
      fi

      togglewifi='disable wifi'
      togglevalue='off'
    else
      togglewifi='enable wifi'
      togglevalue='on'
    fi
  fi

  menu="$connect\n$disconnect\n$togglewifi\n$stopnm\n$startnm"

  answer=$( echo -e $menu | awk 'NF' | dmenu -l 10 -p "$prompt" )

  if [[ ! -z "$answer" ]]; then
    if [[ "$answer" == "$connect" ]]; then
      network=$( nmcli -g SSID device wifi | uniq | awk 'NF' | dmenu -l 10 -p 'choose network' )
      if [[ ! -z "$network" ]]; then
        if nmcli --terse -f NAME connection show | grep $network; then
          nmcli connection up id $network
        else
          nmcli device wifi connect $network --ask
        fi
      else
        network_prompt
      fi
    elif [[ "$answer" == "$disconnect" ]]; then
      nmcli connection down id $connected_network
    elif [[ "$answer" == "$togglewifi" ]]; then
      nmcli radio wifi $togglevalue
      if [[ "$togglevalue" == 'on' ]]; then
        until nmcli -t -f WIFI general | grep enabled;
        do
          sleep 1
        done
        network_prompt
      fi
    elif [[ "$answer" == "$stopnm" ]]; then
      sudo -A systemctl stop NetworkManager.service
    elif [[ "$answer" == "$startnm" ]]; then
      sudo -A systemctl start NetworkManager.service
      until systemctl is-active NetworkManager;
      do
        sleep 1
      done
      network_prompt
    fi
  fi
}

network_prompt

