#!/bin/sh

network_prompt () {
  startnm=''
  prompt=''
  stopnm=''
  connect=''
  disconnect=''
  saved_connections=''
  togglewifi=''
  togglevalue=''

  if ! systemctl is-active --quiet NetworkManager; then
    startnm='start network manager'
    prompt='network manager is inactive'
  else
    stopnm='stop network manager'

    if nmcli radio wifi | grep --quiet enabled; then
      connect='connect to wifi network'
      connected_network=$( nmcli --get-values NAME connection show --active | grep --invert-match --line-regexp lo )

      if [[ ! -z "$connected_network" ]]; then
        disconnect="disconnect from $connected_network"
        prompt="connected to $connected_network"
      fi

      connections_list=$( nmcli --get-values NAME,TYPE connection show | awk -F: '$2 ~ "wireless" { print $1 }' )

      if [[ ! -z "$connections_list" ]]; then
        saved_connections='saved connections'
      fi

      togglewifi='disable wifi'
      togglevalue='off'
    else
      togglewifi='enable wifi'
      togglevalue='on'
    fi
  fi

  menu="$connect\n$disconnect\n$togglewifi\n$saved_connections\n$stopnm\n$startnm"

  answer=$( echo -e $menu | awk 'NF' | dmenu -l 10 -p "$prompt" )

  if [[ ! -z "$answer" ]]; then
    if [[ "$answer" == "$connect" ]]; then
      available_networks=$( nmcli --get-values SSID,SECURITY device wifi )
      network=$( awk -F: '$1 { print $1 }' <<< "$available_networks" | uniq |  dmenu -l 10 -p 'choose network' )
      if [[ ! -z "$network" ]]; then
        if grep $network <<< "$connections_list"; then
          nmcli connection up id $network
        elif awk -F: -v network="$network" '$1 == network { print $2 }' <<< "$available_networks" | grep .; then
          password=$( dmenu -p "enter password for $network" <&- )
          nmcli device wifi connect $network password $password
        else
          nmcli device wifi connect $network
        fi
      else
        network_prompt
      fi
    elif [[ "$answer" == "$disconnect" ]]; then
      nmcli connection down id $connected_network
    elif [[ "$answer" == "$togglewifi" ]]; then
      nmcli radio wifi $togglevalue
      if [[ "$togglevalue" == 'on' ]]; then
        until nmcli --get-values WIFI general | grep enabled;
        do
          sleep 1
        done
        refresh_status_block
        network_prompt
      fi
    elif [[ "$answer" == "$saved_connections" ]]; then
      connection=$( echo "$connections_list" | dmenu -l 10 )
      if [[ ! -z "$connection" && ! -z $( echo 'yes' | dmenu -l 10 -p "delete connection $connection?") ]]; then
        nmcli connection delete id $connection
      fi
    elif [[ "$answer" == "$stopnm" ]]; then
      sudo --askpass systemctl stop NetworkManager.service
    elif [[ "$answer" == "$startnm" ]]; then
      sudo --askpass systemctl start NetworkManager.service
      until systemctl is-active --quiet NetworkManager;
      do
        sleep 1
      done
      refresh_status_block
      network_prompt
    fi
  fi

  refresh_status_block
}

refresh_status_block () {
  kill -35 $( pidof dwmblocks )
}

network_prompt

